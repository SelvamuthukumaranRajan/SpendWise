// Mocks generated by Mockito 5.4.4 from annotations
// in spend_wise/test/summary_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:flutter/material.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:spend_wise/data/models/transaction_model.dart' as _i4;
import 'package:spend_wise/viewModels/summary_view_model.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIconData_0 extends _i1.SmartFake implements _i2.IconData {
  _FakeIconData_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SummaryViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockSummaryViewModel extends _i1.Mock implements _i3.SummaryViewModel {
  MockSummaryViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Status get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i3.Status.loading,
      ) as _i3.Status);

  @override
  set status(_i3.Status? _status) => super.noSuchMethod(
        Invocation.setter(
          #status,
          _status,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i4.TransactionModel> get transactions => (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue: <_i4.TransactionModel>[],
      ) as List<_i4.TransactionModel>);

  @override
  List<String> get types => (super.noSuchMethod(
        Invocation.getter(#types),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<String> get periods => (super.noSuchMethod(
        Invocation.getter(#periods),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<String> get categories => (super.noSuchMethod(
        Invocation.getter(#categories),
        returnValue: <String>[],
      ) as List<String>);

  @override
  String get selectedType => (super.noSuchMethod(
        Invocation.getter(#selectedType),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#selectedType),
        ),
      ) as String);

  @override
  String get selectedCategory => (super.noSuchMethod(
        Invocation.getter(#selectedCategory),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#selectedCategory),
        ),
      ) as String);

  @override
  String get selectedPeriod => (super.noSuchMethod(
        Invocation.getter(#selectedPeriod),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#selectedPeriod),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setCategory(String? category) => super.noSuchMethod(
        Invocation.method(
          #setCategory,
          [category],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> fetchTransactions() => (super.noSuchMethod(
        Invocation.method(
          #fetchTransactions,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> filterTransactions({
    String? selectedType,
    String? selectedCategory,
    String? selectedPeriod,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterTransactions,
          [],
          {
            #selectedType: selectedType,
            #selectedCategory: selectedCategory,
            #selectedPeriod: selectedPeriod,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateTransaction({
    required int? id,
    required String? title,
    required String? desc,
    required String? category,
    required String? amount,
    required bool? isExpense,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTransaction,
          [],
          {
            #id: id,
            #title: title,
            #desc: desc,
            #category: category,
            #amount: amount,
            #isExpense: isExpense,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteTransaction(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTransaction,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i2.IconData getIconForCategory(String? category) => (super.noSuchMethod(
        Invocation.method(
          #getIconForCategory,
          [category],
        ),
        returnValue: _FakeIconData_0(
          this,
          Invocation.method(
            #getIconForCategory,
            [category],
          ),
        ),
      ) as _i2.IconData);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
